type Query {
  documents: [Document!]
  document(name: String!): Document!
}

type Mutation {
  document(name: String!): Document!
  addDocument(input: DocumentCreateInput!, path: String!): Document!
  deleteDocument(name: String!): [Document!]
}

enum RepositoryVisibility {
  PUBLIC
  PRIVATE
}

type Document {
  # basic info
  id: ID!
  name: String!
  description: String
  createdAt: DateTime!
  pushedAt: DateTime!
  isPrivate: Boolean
  url: URL!

  latex: LaTeXDoc
  uploadImage: File!
  updateLaTeX(input: LaTeXDocUpdateInput!): Document
}

type LaTeXDoc {

  # latex_code convert to object
  documentclass: String!
  titles: Titles!
  setting: Setting
  contents: [Section!]
  images: [URL!]

  # complete latex code
  latex_code: String!

  # function to update latex document
}

type Setting{
  fontSize: Float
  lineHeight: Float
  firstLineIndentation: Float
}

type Titles {
  title: String!
  author: String
  date: String
  always_today: Boolean!
}

type Section {
  id: String
  code: String
  text: String
}

type File {
  name: String!
  content_type: String!
  file_type: String!
}